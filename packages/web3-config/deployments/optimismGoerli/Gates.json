{
  "address": "0xA13789F90FabD80CB3141D19425eD17a037b51FB",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gateId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_conditions",
          "type": "bytes"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "conditions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gateId",
          "type": "uint256"
        }
      ],
      "name": "getMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gateId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x8c41a7122147f9450e642c67b80d2b05bb960e397422c61de67c615631b21068",
  "receipt": {
    "to": null,
    "from": "0xA4B7CEe8409673624EC9B075f5A4f9b8EbAdEd49",
    "contractAddress": "0xA13789F90FabD80CB3141D19425eD17a037b51FB",
    "transactionIndex": 0,
    "gasUsed": "697538",
    "logsBloom": "0x
    "blockHash": "0x8e69e8a2cb9df26ffbbeb314129ae5f54bcac2ab7d723a0bd3459ca2e7d67431",
    "transactionHash": "0x8c41a7122147f9450e642c67b80d2b05bb960e397422c61de67c615631b21068",
    "logs": [],
    "blockNumber": 1789472,
    "cumulativeGasUsed": "697538",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "95e41d78607410ba2b5839e353e92a99",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_conditions\",\"type\":\"bytes\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"conditions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gateId\",\"type\":\"uint256\"}],\"name\":\"getMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gateId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gates.sol\":\"Gates\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gates.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.14;\\n\\ncontract Gates {\\n    uint256 count = 0;\\n    mapping(uint256 => bytes) public conditions;\\n\\n    event Created(uint256 gateId, address creator);\\n\\n    function add(bytes calldata _conditions) public {\\n        conditions[count] = _conditions;\\n        emit Created(count, msg.sender);\\n        count++;\\n    }\\n\\n    function getMessageHash(uint256 gateId) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(gateId));\\n    }\\n\\n    function getEthSignedMessageHash(bytes32 _messageHash)\\n        internal\\n        pure\\n        returns (bytes32)\\n    {\\n        /*\\n        Signature is produced by signing a keccak256 hash with the following format:\\n        \\\"\\\\x19Ethereum Signed Message\\\\n\\\" + len(msg) + msg\\n        */\\n        return\\n            keccak256(\\n                abi.encodePacked(\\n                    '\\\\x19Ethereum Signed Message:\\\\n32',\\n                    _messageHash\\n                )\\n            );\\n    }\\n\\n    function verify(\\n        address _signer,\\n        uint256 gateId,\\n        bytes memory signature\\n    ) external pure returns (bool) {\\n        bytes32 messageHash = getMessageHash(gateId);\\n        bytes32 ethSignedMessageHash = getEthSignedMessageHash(messageHash);\\n\\n        return recoverSigner(ethSignedMessageHash, signature) == _signer;\\n    }\\n\\n    function recoverSigner(\\n        bytes32 _ethSignedMessageHash,\\n        bytes memory _signature\\n    ) internal pure returns (address) {\\n        (bytes32 r, bytes32 s, uint8 v) = splitSignature(_signature);\\n\\n        return ecrecover(_ethSignedMessageHash, v, r, s);\\n    }\\n\\n    function splitSignature(bytes memory sig)\\n        internal\\n        pure\\n        returns (\\n            bytes32 r,\\n            bytes32 s,\\n            uint8 v\\n        )\\n    {\\n        require(sig.length == 65, 'invalid signature length');\\n\\n        assembly {\\n            /*\\n            First 32 bytes stores the length of the signature\\n\\n            add(sig, 32) = pointer of sig + 32\\n            effectively, skips first 32 bytes of signature\\n\\n            mload(p) loads next 32 bytes starting at the memory address p into memory\\n            */\\n\\n            // first 32 bytes, after the length prefix\\n            r := mload(add(sig, 32))\\n            // second 32 bytes\\n            s := mload(add(sig, 64))\\n            // final byte (first byte of the next 32 bytes)\\n            v := byte(0, mload(add(sig, 96)))\\n        }\\n\\n        // implicitly return (r, s, v)\\n    }\\n}\\n\",\"keccak256\":\"0x2756262be5ffe886ce1ab6a82244d14807bc12b23f74d49f6dc7b1ed33eeaece\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000805534801561001457600080fd5b50610ba6806100246000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806326c50007146100515780636f576e0614610081578063ba658111146100b1578063ba86a10d146100cd575b600080fd5b61006b60048036038101906100669190610499565b6100fd565b604051610078919061055f565b60405180910390f35b61009b60048036038101906100969190610714565b61019d565b6040516100a8919061079e565b60405180910390f35b6100cb60048036038101906100c69190610819565b6101fb565b005b6100e760048036038101906100e29190610499565b610275565b6040516100f4919061087f565b60405180910390f35b6001602052806000526040600020600091509050805461011c906108c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610148906108c9565b80156101955780601f1061016a57610100808354040283529160200191610195565b820191906000526020600020905b81548152906001019060200180831161017857829003601f168201915b505050505081565b6000806101a984610275565b905060006101b6826102a5565b90508573ffffffffffffffffffffffffffffffffffffffff166101d982866102d5565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b81816001600080548152602001908152602001600020919061021e9291906103ac565b507f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd660005433604051610252929190610918565b60405180910390a160008081548092919061026c90610970565b91905055505050565b60008160405160200161028891906109d9565b604051602081830303815290604052805190602001209050919050565b6000816040516020016102b89190610a6c565b604051602081830303815290604052805190602001209050919050565b6000806000806102e485610344565b9250925092506001868285856040516000815260200160405260405161030d9493929190610aae565b6020604051602081039080840390855afa15801561032f573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511461038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610b50565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b8280546103b8906108c9565b90600052602060002090601f0160209004810192826103da5760008555610421565b82601f106103f357803560ff1916838001178555610421565b82800160010185558215610421579182015b82811115610420578235825591602001919060010190610405565b5b50905061042e9190610432565b5090565b5b8082111561044b576000816000905550600101610433565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61047681610463565b811461048157600080fd5b50565b6000813590506104938161046d565b92915050565b6000602082840312156104af576104ae610459565b5b60006104bd84828501610484565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105005780820151818401526020810190506104e5565b8381111561050f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610531826104c6565b61053b81856104d1565b935061054b8185602086016104e2565b61055481610515565b840191505092915050565b600060208201905081810360008301526105798184610526565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ac82610581565b9050919050565b6105bc816105a1565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61062182610515565b810181811067ffffffffffffffff821117156106405761063f6105e9565b5b80604052505050565b600061065361044f565b905061065f8282610618565b919050565b600067ffffffffffffffff82111561067f5761067e6105e9565b5b61068882610515565b9050602081019050919050565b82818337600083830152505050565b60006106b76106b284610664565b610649565b9050828152602081018484840111156106d3576106d26105e4565b5b6106de848285610695565b509392505050565b600082601f8301126106fb576106fa6105df565b5b813561070b8482602086016106a4565b91505092915050565b60008060006060848603121561072d5761072c610459565b5b600061073b868287016105ca565b935050602061074c86828701610484565b925050604084013567ffffffffffffffff81111561076d5761076c61045e565b5b610779868287016106e6565b9150509250925092565b60008115159050919050565b61079881610783565b82525050565b60006020820190506107b3600083018461078f565b92915050565b600080fd5b600080fd5b60008083601f8401126107d9576107d86105df565b5b8235905067ffffffffffffffff8111156107f6576107f56107b9565b5b602083019150836001820283011115610812576108116107be565b5b9250929050565b600080602083850312156108305761082f610459565b5b600083013567ffffffffffffffff81111561084e5761084d61045e565b5b61085a858286016107c3565b92509250509250929050565b6000819050919050565b61087981610866565b82525050565b60006020820190506108946000830184610870565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108e157607f821691505b6020821081036108f4576108f361089a565b5b50919050565b61090381610463565b82525050565b610912816105a1565b82525050565b600060408201905061092d60008301856108fa565b61093a6020830184610909565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061097b82610463565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ad576109ac610941565b5b600182019050919050565b6000819050919050565b6109d36109ce82610463565b6109b8565b82525050565b60006109e582846109c2565b60208201915081905092915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610a35601c836109f4565b9150610a40826109ff565b601c82019050919050565b6000819050919050565b610a66610a6182610866565b610a4b565b82525050565b6000610a7782610a28565b9150610a838284610a55565b60208201915081905092915050565b600060ff82169050919050565b610aa881610a92565b82525050565b6000608082019050610ac36000830187610870565b610ad06020830186610a9f565b610add6040830185610870565b610aea6060830184610870565b95945050505050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b6000610b3a601883610af3565b9150610b4582610b04565b602082019050919050565b60006020820190508181036000830152610b6981610b2d565b905091905056fea2646970667358221220bb083587d3c4c4a91c157e73abc8e5c551aeebfc2444de3d666a04df08f7941064736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806326c50007146100515780636f576e0614610081578063ba658111146100b1578063ba86a10d146100cd575b600080fd5b61006b60048036038101906100669190610499565b6100fd565b604051610078919061055f565b60405180910390f35b61009b60048036038101906100969190610714565b61019d565b6040516100a8919061079e565b60405180910390f35b6100cb60048036038101906100c69190610819565b6101fb565b005b6100e760048036038101906100e29190610499565b610275565b6040516100f4919061087f565b60405180910390f35b6001602052806000526040600020600091509050805461011c906108c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610148906108c9565b80156101955780601f1061016a57610100808354040283529160200191610195565b820191906000526020600020905b81548152906001019060200180831161017857829003601f168201915b505050505081565b6000806101a984610275565b905060006101b6826102a5565b90508573ffffffffffffffffffffffffffffffffffffffff166101d982866102d5565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b81816001600080548152602001908152602001600020919061021e9291906103ac565b507f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd660005433604051610252929190610918565b60405180910390a160008081548092919061026c90610970565b91905055505050565b60008160405160200161028891906109d9565b604051602081830303815290604052805190602001209050919050565b6000816040516020016102b89190610a6c565b604051602081830303815290604052805190602001209050919050565b6000806000806102e485610344565b9250925092506001868285856040516000815260200160405260405161030d9493929190610aae565b6020604051602081039080840390855afa15801561032f573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511461038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610b50565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b8280546103b8906108c9565b90600052602060002090601f0160209004810192826103da5760008555610421565b82601f106103f357803560ff1916838001178555610421565b82800160010185558215610421579182015b82811115610420578235825591602001919060010190610405565b5b50905061042e9190610432565b5090565b5b8082111561044b576000816000905550600101610433565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61047681610463565b811461048157600080fd5b50565b6000813590506104938161046d565b92915050565b6000602082840312156104af576104ae610459565b5b60006104bd84828501610484565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105005780820151818401526020810190506104e5565b8381111561050f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610531826104c6565b61053b81856104d1565b935061054b8185602086016104e2565b61055481610515565b840191505092915050565b600060208201905081810360008301526105798184610526565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ac82610581565b9050919050565b6105bc816105a1565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61062182610515565b810181811067ffffffffffffffff821117156106405761063f6105e9565b5b80604052505050565b600061065361044f565b905061065f8282610618565b919050565b600067ffffffffffffffff82111561067f5761067e6105e9565b5b61068882610515565b9050602081019050919050565b82818337600083830152505050565b60006106b76106b284610664565b610649565b9050828152602081018484840111156106d3576106d26105e4565b5b6106de848285610695565b509392505050565b600082601f8301126106fb576106fa6105df565b5b813561070b8482602086016106a4565b91505092915050565b60008060006060848603121561072d5761072c610459565b5b600061073b868287016105ca565b935050602061074c86828701610484565b925050604084013567ffffffffffffffff81111561076d5761076c61045e565b5b610779868287016106e6565b9150509250925092565b60008115159050919050565b61079881610783565b82525050565b60006020820190506107b3600083018461078f565b92915050565b600080fd5b600080fd5b60008083601f8401126107d9576107d86105df565b5b8235905067ffffffffffffffff8111156107f6576107f56107b9565b5b602083019150836001820283011115610812576108116107be565b5b9250929050565b600080602083850312156108305761082f610459565b5b600083013567ffffffffffffffff81111561084e5761084d61045e565b5b61085a858286016107c3565b92509250509250929050565b6000819050919050565b61087981610866565b82525050565b60006020820190506108946000830184610870565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108e157607f821691505b6020821081036108f4576108f361089a565b5b50919050565b61090381610463565b82525050565b610912816105a1565b82525050565b600060408201905061092d60008301856108fa565b61093a6020830184610909565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061097b82610463565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ad576109ac610941565b5b600182019050919050565b6000819050919050565b6109d36109ce82610463565b6109b8565b82525050565b60006109e582846109c2565b60208201915081905092915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610a35601c836109f4565b9150610a40826109ff565b601c82019050919050565b6000819050919050565b610a66610a6182610866565b610a4b565b82525050565b6000610a7782610a28565b9150610a838284610a55565b60208201915081905092915050565b600060ff82169050919050565b610aa881610a92565b82525050565b6000608082019050610ac36000830187610870565b610ad06020830186610a9f565b610add6040830185610870565b610aea6060830184610870565b95945050505050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b6000610b3a601883610af3565b9150610b4582610b04565b602082019050919050565b60006020820190508181036000830152610b6981610b2d565b905091905056fea2646970667358221220bb083587d3c4c4a91c157e73abc8e5c551aeebfc2444de3d666a04df08f7941064736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/Gates.sol:Gates",
        "label": "count",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8,
        "contract": "contracts/Gates.sol:Gates",
        "label": "conditions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_bytes_storage)"
      }
    ],
    "types": {
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint256,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}