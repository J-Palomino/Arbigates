/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gates, GatesInterface } from "../Gates";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "Created",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_conditions",
        type: "bytes",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "conditions",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gateId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610ba6806100246000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806326c50007146100515780636f576e0614610081578063ba658111146100b1578063ba86a10d146100cd575b600080fd5b61006b60048036038101906100669190610499565b6100fd565b604051610078919061055f565b60405180910390f35b61009b60048036038101906100969190610714565b61019d565b6040516100a8919061079e565b60405180910390f35b6100cb60048036038101906100c69190610819565b6101fb565b005b6100e760048036038101906100e29190610499565b610275565b6040516100f4919061087f565b60405180910390f35b6001602052806000526040600020600091509050805461011c906108c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610148906108c9565b80156101955780601f1061016a57610100808354040283529160200191610195565b820191906000526020600020905b81548152906001019060200180831161017857829003601f168201915b505050505081565b6000806101a984610275565b905060006101b6826102a5565b90508573ffffffffffffffffffffffffffffffffffffffff166101d982866102d5565b73ffffffffffffffffffffffffffffffffffffffff1614925050509392505050565b81816001600080548152602001908152602001600020919061021e9291906103ac565b507f7757890bcab34d673dfca6b71df1b57f75a2fe4231d6e8de726caf534ab1fdd660005433604051610252929190610918565b60405180910390a160008081548092919061026c90610970565b91905055505050565b60008160405160200161028891906109d9565b604051602081830303815290604052805190602001209050919050565b6000816040516020016102b89190610a6c565b604051602081830303815290604052805190602001209050919050565b6000806000806102e485610344565b9250925092506001868285856040516000815260200160405260405161030d9493929190610aae565b6020604051602081039080840390855afa15801561032f573d6000803e3d6000fd5b50505060206040510351935050505092915050565b6000806000604184511461038d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038490610b50565b60405180910390fd5b6020840151925060408401519150606084015160001a90509193909250565b8280546103b8906108c9565b90600052602060002090601f0160209004810192826103da5760008555610421565b82601f106103f357803560ff1916838001178555610421565b82800160010185558215610421579182015b82811115610420578235825591602001919060010190610405565b5b50905061042e9190610432565b5090565b5b8082111561044b576000816000905550600101610433565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61047681610463565b811461048157600080fd5b50565b6000813590506104938161046d565b92915050565b6000602082840312156104af576104ae610459565b5b60006104bd84828501610484565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105005780820151818401526020810190506104e5565b8381111561050f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610531826104c6565b61053b81856104d1565b935061054b8185602086016104e2565b61055481610515565b840191505092915050565b600060208201905081810360008301526105798184610526565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105ac82610581565b9050919050565b6105bc816105a1565b81146105c757600080fd5b50565b6000813590506105d9816105b3565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61062182610515565b810181811067ffffffffffffffff821117156106405761063f6105e9565b5b80604052505050565b600061065361044f565b905061065f8282610618565b919050565b600067ffffffffffffffff82111561067f5761067e6105e9565b5b61068882610515565b9050602081019050919050565b82818337600083830152505050565b60006106b76106b284610664565b610649565b9050828152602081018484840111156106d3576106d26105e4565b5b6106de848285610695565b509392505050565b600082601f8301126106fb576106fa6105df565b5b813561070b8482602086016106a4565b91505092915050565b60008060006060848603121561072d5761072c610459565b5b600061073b868287016105ca565b935050602061074c86828701610484565b925050604084013567ffffffffffffffff81111561076d5761076c61045e565b5b610779868287016106e6565b9150509250925092565b60008115159050919050565b61079881610783565b82525050565b60006020820190506107b3600083018461078f565b92915050565b600080fd5b600080fd5b60008083601f8401126107d9576107d86105df565b5b8235905067ffffffffffffffff8111156107f6576107f56107b9565b5b602083019150836001820283011115610812576108116107be565b5b9250929050565b600080602083850312156108305761082f610459565b5b600083013567ffffffffffffffff81111561084e5761084d61045e565b5b61085a858286016107c3565b92509250509250929050565b6000819050919050565b61087981610866565b82525050565b60006020820190506108946000830184610870565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108e157607f821691505b6020821081036108f4576108f361089a565b5b50919050565b61090381610463565b82525050565b610912816105a1565b82525050565b600060408201905061092d60008301856108fa565b61093a6020830184610909565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061097b82610463565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ad576109ac610941565b5b600182019050919050565b6000819050919050565b6109d36109ce82610463565b6109b8565b82525050565b60006109e582846109c2565b60208201915081905092915050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000610a35601c836109f4565b9150610a40826109ff565b601c82019050919050565b6000819050919050565b610a66610a6182610866565b610a4b565b82525050565b6000610a7782610a28565b9150610a838284610a55565b60208201915081905092915050565b600060ff82169050919050565b610aa881610a92565b82525050565b6000608082019050610ac36000830187610870565b610ad06020830186610a9f565b610add6040830185610870565b610aea6060830184610870565b95945050505050565b600082825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b6000610b3a601883610af3565b9150610b4582610b04565b602082019050919050565b60006020820190508181036000830152610b6981610b2d565b905091905056fea2646970667358221220bb083587d3c4c4a91c157e73abc8e5c551aeebfc2444de3d666a04df08f7941064736f6c634300080e0033";

type GatesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gates__factory extends ContractFactory {
  constructor(...args: GatesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Gates";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gates> {
    return super.deploy(overrides || {}) as Promise<Gates>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gates {
    return super.attach(address) as Gates;
  }
  connect(signer: Signer): Gates__factory {
    return super.connect(signer) as Gates__factory;
  }
  static readonly contractName: "Gates";
  public readonly contractName: "Gates";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatesInterface {
    return new utils.Interface(_abi) as GatesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gates {
    return new Contract(address, _abi, signerOrProvider) as Gates;
  }
}
